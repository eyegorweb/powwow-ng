image: gradle:5.1.1

stages:
  - version
  - build
  - test
  - release
  - deploy
  - undeploy

variables:
  http_proxy: "http://proxyace2.prod.extelia.fr:8080"
  https_proxy: "http://proxyace2.prod.extelia.fr:8080"
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2048M" -Dorg.gradle.daemon=false -Djib.httpTimeout=120000 -Dhttp.proxyHost=proxyace2.prod.extelia.fr -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxyace2.prod.extelia.fr -Dhttps.proxyPort=8080
  ORG_GRADLE_PROJECT_npmBuildEnv: integration # integration ou full-local. Sans valeur, c'est la production qui est cible
  GSG_RELEASE_BRANCHES: uat
  GSG_PRE_TMPL: '{{ (env "CI_COMMIT_REF_SLUG") }},{{ seq }}'
  GSG_BUILD_TMPL: '{{ commitTS.Format "20060102150405" }}'
  GSG_INITIAL_DEVELOPMENT: "true"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - echo "registry=https://outils.docapost.tech/nexus/repository/npm-central/" > ~/.npmrc

version:
  stage: version
  image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.20.4
  script:
    - release next-version --allow-current > .next-version
  after_script:
    - cat .next-version
    - cp /usr/bin/release .
  artifacts:
    paths:
      - .next-version
      - release
  except:
    - tags

build:
  stage: build
  script:
    - gradle --build-cache assemble --info
    - echo "RELEASE_SHA=$CI_COMMIT_SHA" >> build_info
    - echo "RELEASE_VERSION=`cat .next-version`" >> build_info
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .gradle/caches
      - ui/.gradle/nodejs
      - ui/.gradle/yarn
      - ui/node_modules
  artifacts:
    paths:
      - build_info
      - ui/dist
  except:
    - tags

pre-release:
  stage: release
  script:
    - rm -f ui-server/version.txt
    - cp .next-version ui-server/version.txt
    - rm -f ui-server/pre_release_info
    - mv build_info ui-server/pre_release_info
    - . ui-server/pre_release_info
    - gradle --build-cache jib -PregistryImageName=$CI_REGISTRY_IMAGE -PregistryImageTag=latest -PregistryUsername=$CI_REGISTRY_USER -PregistryPassword=$CI_REGISTRY_PASSWORD --info
    - ./release -v
    - ./release changelog --f ui-server/CHANGELOG.md
    - ./release commit-and-tag ui-server/CHANGELOG.md ui-server/pre_release_info ui-server/version.txt
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - .gradle/caches
      - ui/.gradle/nodejs
      - ui/.gradle/yarn
      - ui/node_modules
  only:
    - master
  except:
    - tags

release:
  stage: release
  script:
    - rm -f ui-server/version.txt
    - cp .next-version ui-server/version.txt
    - rm -f ui-server/release_info
    - mv build_info ui-server/release_info
    - . ui-server/release_info
    - gradle --build-cache jib -PregistryImageName=$CI_REGISTRY_IMAGE -PregistryUsername=$CI_REGISTRY_USER -PregistryPassword=$CI_REGISTRY_PASSWORD --info
    - ./release -v
    - ./release changelog --f ui-server/CHANGELOG.md
    - ./release commit-and-tag ui-server/CHANGELOG.md ui-server/release_info ui-server/version.txt
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .gradle/caches
      - ui/.gradle/nodejs
      - ui/.gradle/yarn
      - ui/node_modules
  only:
    - uat
  except:
    - tags

deploy_integration:
  stage: deploy
  image: m2m-registry.by-docapost.com/powwow-ng/envs/toolbox
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan powwowng1.zone.local >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh m2m-prd@powwowng1.zone.local "bash --login -c 'export SPRING_PROFILE=int && ~/docker/docker-admin.sh restart'"
  environment:
    name: integration
    url: http://powwowng1.zone.local:8080
  only:
    - master
  dependencies: []

deploy_testing:
  stage: deploy
  image: m2m-registry.by-docapost.com/powwow-ng/envs/toolbox
  variables:
    KUBECONFIG: /etc/deploy/config
  before_script:
    - mkdir -p /etc/deploy
    - echo ${KUBE_CONFIG} | base64 -d > ${KUBECONFIG}
    - kubectl config view -o jsonpath='{.contexts[*].name}' | tr " " "\n"
    - kubectl config use-context m2m-node-tst
  script:
    - kubectl get po
    - kubectl patch deployment ui -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%Y%m%d%H%M%S'`\"}}}}}"
    - kubectl rollout status deployment.v1.apps/ui
  when: manual
  environment:
    name: testing
    url: http://172.20.157.115:8080
  only:
    - master
  dependencies: []

deploy_uat:
  stage: deploy
  image: m2m-registry.by-docapost.com/powwow-ng/envs/toolbox
  variables:
    KUBECONFIG: /etc/deploy/config
  before_script:
    - mkdir -p /etc/deploy
    - echo ${KUBE_CONFIG} | base64 -d > ${KUBECONFIG}
    - kubectl config view -o jsonpath='{.contexts[*].name}' | tr " " "\n"
    - kubectl config use-context m2m-node-uat
  script:
    - kubectl get po
    - . ui-server/build_info
    - kubectl set image deployments/ui ui=$CI_REGISTRY_IMAGE:$RELEASE_VERSION --record=true
  when: manual
  environment:
    name: uat
    url: https://m2m-uat.by-docapost.com
  only:
    - uat
  except:
    - tags

undeploy_uat:
  stage: undeploy
  image: m2m-registry.by-docapost.com/powwow-ng/envs/toolbox
  variables:
    KUBECONFIG: /etc/deploy/config
  before_script:
    - mkdir -p /etc/deploy
    - echo ${KUBE_CONFIG} | base64 -d > ${KUBECONFIG}
    - kubectl config view -o jsonpath='{.contexts[*].name}' | tr " " "\n"
    - kubectl config use-context m2m-node-uat
  script:
    - kubectl get po
    - kubectl rollout history deployment/ui
    - kubectl rollout undo deployment/ui
  when: manual
  environment:
    name: uat
    url: https://m2m-uat.by-docapost.com
  only:
    - uat
  except:
    - tags
  dependencies: []
